version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}
  monitoring_service_data: {}
  monitoring_service_db: {}

networks:
  front-tier:
  back-tier:

services:
  drift_monitoring_service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PROMETHEUS_METRICS_NAMESPACE=drift_monitoring_api
      - PROMETHEUS_METRICS_SUBSYSTEM=model
      - PYTHONUNBUFFERED=1
      - MIN_SAMPLE_SIZE=30
      - NBR_SAMPLES_REQUIRED_FOR_BAYESIAN=2000
      - RESAMPLE_FOR_HYPOTHESIS_TEST=True
    ports:
      - "5000:5000"
    volumes:
      - monitoring_service_data:/app/data
      - monitoring_service_db:/app/sql_db
      - ./:/app
    networks:
      - back-tier
      - front-tier
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - back-tier
    restart: always

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./dashboards:/opt/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - back-tier
      - front-tier
    restart: always

  # this service is only for testing and development, as your own model will replace the model_api in prod
  model_api:
    build: .
    command: python3 -m uvicorn model_api.main:app --host 0.0.0.0
    volumes:
      - monitoring_service_data:/app/data
      - ./:/app
    ports:
      - "8000:8000"
    networks:
      - back-tier
    restart: always
